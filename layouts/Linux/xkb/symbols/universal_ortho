default partial alphanumeric_keys modifier_keys
xkb_symbols "universal" {
    // allows RALT to trigger AltGr (trird and four) layer
    include "level3(ralt_switch)"
    modifier_map Mod5 { <LVL3> };
    modifier_map Mod5 { <RALT> };

    name[Group1] = "English (US)";
    name[Group2] = "Russian (RU)";

    // key to cycle between language groups
    key<CAPS>{[ISO_Next_Group]};

    // Numbers / Symbols row
    // Note: Numbers and Symbols are swapped as it is better for programming stuff.

    key <AE01> {
        type = "FOUR_LEVEL",
        symbols[Group1] = [ exclam, 1, U00B9, U00A1 ],
        symbols[Group2] = [ exclam, 1, U00B9, U00A1 ]
    };
    key <AE02> {
        type = "FOUR_LEVEL",
        symbols[Group1] = [ at, 2, U00B2, U00BD ],
        symbols[Group2] = [ at, 2, U00B2, U00BD ]
    };
    key <AE03> {
        type = "FOUR_LEVEL",
        symbols[Group1] = [ numbersign, 3, U00B3, U2153 ],
        symbols[Group2] = [ numbersign, 3, U00B3, U2153 ]
    };
    key <AE04> {
        type = "FOUR_LEVEL",
        symbols[Group1] = [ dollar, 4, U2074, U00BC ],
        symbols[Group2] = [ dollar, 4, U2074, U00BC ]
    };
    key <AE05> {
        type = "FOUR_LEVEL",
        symbols[Group1] = [ percent, 5, U2030 ],
        symbols[Group2] = [ percent, 5, U2030 ]
    };
    key <AE06> {
        type = "FOUR_LEVEL",
        symbols[Group1] = [ asciicircum, 6, U02C6 ],
        symbols[Group2] = [ asciicircum, 6, U02C6 ]
    };
    key <AE07> {
        type = "FOUR_LEVEL",
        symbols[Group1] = [ question, 7, U00BF, U2048 ],
        symbols[Group2] = [ question, 7, U00BF, U2048 ]
    };
    key <AE08> {
        type = "FOUR_LEVEL",
        symbols[Group1] = [ asterisk, 8, U221E ],
        symbols[Group2] = [ asterisk, 8, U221E ]
    };
    key <AE09> {
        type = "FOUR_LEVEL",
        symbols[Group1] = [ parenleft, 9, U2018, U201C ],
        symbols[Group2] = [ parenleft, 9, U2018, U201C ]
    };
    key <AE10> {
        type = "FOUR_LEVEL",
        symbols[Group1] = [ parenright, 0, U2019, U201D ],
        symbols[Group2] = [ parenright, 0, U2019, U201D ]
    };


    // Non-Breaking Space in third layer
    key <SPCE> {[ space, space, U00A0, U00A0 ]};

    // Combo-keys, similar symbols in one key

    key <AD11> {
        type = "FOUR_LEVEL",
        symbols[Group1] = [ comma, semicolon, comma, semicolon ],
        symbols[Group2] = [ comma, semicolon, comma, semicolon ]
    };
    key <AD12> {
        type = "FOUR_LEVEL",
        symbols[Group1] = [ period, colon, period, colon ],
        symbols[Group2] = [ period, colon, period, colon ]
    };
    key <BKSL> {
        type = "FOUR_LEVEL",
        symbols[Group1] = [ slash, bar, backslash, U00A6 ],
        symbols[Group2] = [ slash, bar, backslash, U00A6 ]
    };
    key <TLDE> {
        type = "FOUR_LEVEL",
        symbols[Group1] = [ apostrophe, quotedbl, grave, U2022 ],
        symbols[Group2] = [ apostrophe, quotedbl, grave, U2022 ]
    };
    key <AE11> {
        type = "FOUR_LEVEL",
        symbols[Group1] = [ minus, underscore, U2013, U2014 ],
        symbols[Group2] = [ minus, underscore, U2013, U2014 ]
    };
    key <AE12> {
        type = "FOUR_LEVEL",
        symbols[Group1] = [ equal, plus, U2260, U00B1 ],
        symbols[Group2] = [ equal, plus, U2260, U00B1 ]
    };

    // Main type cluster keys

    // Q W E R T
    key <AD01> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ q,     Q,     U03C8, U03A8 ],
        symbols[Group2] = [ U0439, U0419, U03C8, U03A8 ]
    };
    key <AD02> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ w,     W,     U03C9, U03A9 ],
        symbols[Group2] = [ U0446, U0426, U03C9, U03A9 ]
    };
    key <AD03> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ e,     E,     U20AC, U20AC ],
        symbols[Group2] = [ U0443, U0423, U20AC, U20AC ]
    };
    key <AD04> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ r,     R,     U00AE, U00AE ],
        symbols[Group2] = [ U043A, U041A, U00AE, U00AE ]
    };
    key <AD05> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ t,     T,     U0451, U0401 ],
        symbols[Group2] = [ U0435, U0415, U0451, U0401 ]
    };

    // Y U I O P
    key <AD06> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ y,     Y,     U00A5, U00A5 ],
        symbols[Group2] = [ U043D, U041D, U00A5, U00A5 ]
    };
    key <AD07> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ u,     U,     U03BB, U039B ],
        symbols[Group2] = [ U0433, U0413, U03BB, U039B ]
    };
    key <AD08> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ i,     I,     U0449, U0429 ],
        symbols[Group2] = [ U0448, U0428, U0449, U0429 ]
    };
    key <AD09> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ o,     O,     less, U2264 ],
        symbols[Group2] = [ U0437, U0417, less, U2264 ]
    };
    key <AD10> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ p,     P,     greater, U2265 ],
        symbols[Group2] = [ U0445, U0425, greater, U2265 ]
    };

    // A S D F G
    key <AC01> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ a,     A,     U03B1, U0391 ],
        symbols[Group2] = [ U0444, U0424, U03B1, U0391 ]
    };
    key <AC02> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ s,     S,     U00A7, U03A3 ],
        symbols[Group2] = [ U044B, U042B, U00A7, U03A3 ]
    };
    key <AC03> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ d,     D,     U00B0, U0394 ],
        symbols[Group2] = [ U0432, U0412, U00B0, U0394 ]
    };
    key <AC04> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ f,     F,     U00A3, U00A3 ],
        symbols[Group2] = [ U0430, U0410, U00A3, U00A3 ]
    };
    key <AC05> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ g,     G,     U03B3, U03B3 ],
        symbols[Group2] = [ U043F, U041F, U03B3, U03B3 ]
    };

    // H J K L ~
    key <AC06> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ h,     H,     U20BD, U20BD ],
        symbols[Group2] = [ U0440, U0420, U20BD, U20BD ]
    };
    key <AC07> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ j,     J,     U00F8, U00D8 ],
        symbols[Group2] = [ U043E, U041E, U00F8, U00D8 ]
    };
    key <AC08> {
        type = "FOUR_LEVEL_ALPHABETIC",
        // XKB doesn't support ligatures input
        // so 3 and 4 positions are used for macro keys.
        symbols[Group1] = [ k,     K,     XF86Macro1, XF86Macro2 ],
        symbols[Group2] = [ U043B, U041B, XF86Macro1, XF86Macro2 ]
    };
    key <AC09> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ l,     L,     U00AB, U2190 ],
        symbols[Group2] = [ U0434, U0414, U00AB, U2190 ]
    };
    key <AC10> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ U007E, U2248, U00BB, U2192 ],
        symbols[Group2] = [ U0436, U0416, U00BB, U2192 ]
    };

    // Z X C V B
    key <AB01> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ z,     Z,     U03BC, U039C ],
        symbols[Group2] = [ U044F, U042F, U03BC, U039C ]
    };
    key <AB02> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ x,     X,     U00D7, U00D7],
        symbols[Group2] = [ U0447, U0427, U00D7, U00D7]
    };
    key <AB03> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ c,     C,     U00A9 , U00A2],
        symbols[Group2] = [ U0441, U0421, U00A9 , U00A2]
    };
    key <AB04> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ v,     V,     U221A, U221A ],
        symbols[Group2] = [ U043C, U041C, U221A, U221A ]
    };
    key <AB05> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ b,     B,     U03B2, U0392 ],
        symbols[Group2] = [ U0438, U0418, U03B2, U0392 ]
    };

    // N M & [ ]
    key <AB06> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ n,     N,     U03B7, U0397 ],
        symbols[Group2] = [ U0442, U0422, U03B7, U0397 ]
    };
    key <AB07> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ m,     M,     U044A, U042A ],
        symbols[Group2] = [ U044C, U042C, U044A, U042A ]
    };
    key <AB08> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ ampersand, ampersand, ampersand, U2026 ],
        symbols[Group2] = [ U0431,     U0411,     ampersand, U2026 ]
    };
    key <AB09> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ bracketleft, braceleft, bracketleft, braceleft ],
        symbols[Group2] = [ U044E,       U042E,     bracketleft, braceleft ]
    };
    key <AB10> {
        type = "FOUR_LEVEL_ALPHABETIC",
        symbols[Group1] = [ bracketright, braceright, bracketright, braceright ],
        symbols[Group2] = [ U044D,        U042D,      bracketright, braceright ]
    };
};
